name: Build, Lint, Test & Deploy Frontend

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      REGISTRY_LOGIN_SERVER: plataforma-frontend-app.azurecr.io
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # 1) Setup Node con cache de npm (usa package-lock.json)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      # 2) Instalación limpia y rápida
      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test

  deploy:
    if: github.event_name == 'push'
    needs: ci
    env:
      REGISTRY_LOGIN_SERVER: plataforma-frontend-app.azurecr.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: ACR Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.REGISTRY_LOGIN_SERVER }}/plataforma-frontend:${{ github.sha }}
      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name: plataforma-frontend-app
          images: ${{ env.REGISTRY_LOGIN_SERVER }}/plataforma-frontend:${{ github.sha }}